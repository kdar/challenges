package main

import (
	"bufio"
	"bytes"
	"fmt"
	"io"
	"os"
	"strings"
)

var (
	TEST = `
`
)

func solve(input io.Reader) {
	scanner := bufio.NewScanner(input)
	scanner.Scan()
	A := []byte(scanner.Text())
	scanner.Scan()
	B := []byte(scanner.Text())

	if bytes.Count(A, []byte("1")) != bytes.Count(B, []byte("1")) {
		fmt.Println("-1")
		return
	}

	swaps := 0
	for i := 0; i < len(A); i++ {
		if A[i] != B[i] {
			for j := i + 1; j < len(A); j++ {
				if A[j] != B[j] && B[i] != B[j] {
					swaps++
					B[i], B[j] = B[j], B[i]
					break
				}
			}
		}
	}

	fmt.Println(swaps)
}

func main() {
	if len(os.Args) > 1 && os.Args[1] == "test" {
		solve(strings.NewReader(TEST))
		return
	}

	solve(os.Stdin)
}
